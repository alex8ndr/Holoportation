// Compute Shader: Efficient Point Cloud Rendering
// This shader preprocesses the point cloud on the GPU and expands them into billboards efficiently

#pragma kernel CSMain

RWStructuredBuffer<float3> PositionBuffer;
RWStructuredBuffer<float4> ColorBuffer;
RWStructuredBuffer<float4> BillboardVertices;
RWStructuredBuffer<float4> BillboardColors;

cbuffer Params
{
    float4x4 ViewProjection;
    float3 CameraPos;
    float PointSize;
    uint NumPoints;
};

[numthreads(256, 1, 1)]
void CSMain(uint id : SV_DispatchThreadID)
{
    if (id >= NumPoints)
        return;

    float3 pos = PositionBuffer[id];
    float4 col = ColorBuffer[id];

    // Compute billboard vectors
    float3 up = float3(0, 1, 0);
    float3 look = normalize(pos - CameraPos);
    float3 right = normalize(cross(up, look));
    float halfSize = PointSize * 0.5f;
    
    float3 offsets[4] =
    {
        -right * halfSize - up * halfSize,
         right * halfSize - up * halfSize,
        -right * halfSize + up * halfSize,
         right * halfSize + up * halfSize
    };

    // Store expanded billboard positions and colors
    for (int i = 0; i < 4; i++)
    {
        BillboardVertices[id * 4 + i] = float4(pos + offsets[i], 1.0f);
        BillboardColors[id * 4 + i] = col;
    }
}
